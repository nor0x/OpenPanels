@page "/"
@using System.Text.Json;
@using System.Text.Json.Serialization;
@inject IJSRuntime _js;
@inject HttpClient _http

<PageTitle>Home</PageTitle>
<h1>OpenPanels 🖼️</h1>
<p>
	not much to see here, just a slowly loading list of publicly available images from the <a href="https://panels.art"
		target="_blank">https://panels.art</a> server. click on an image to download it 😘
	<br @ />
	code is here <a href="https://github.com/nor0x/OpenPanels" target="_blank">https://github.com/nor0x/OpenPanels</a>
</p>
<div class="img-container">
	@if (_urls is not null)
	{

		<Virtualize Items="_urls" Context="url">
			<ItemContent>
				<a href="@url.download" download>
					<img style="background-image: url('@url.src'), url('img/3-dots-rotate.svg');" />
				</a>
			</ItemContent>
		</Virtualize>
	}
</div>
@code
{
	List<(string src, string download)> _urls;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			var json = await _http.GetStringAsync("data/merge.json");
			JsonSerializerOptions options = new JsonSerializerOptions
				{
					WriteIndented = true,
					Converters = { new TupleConverter() },
					Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping
				};
			var urls = JsonSerializer.Deserialize<List<(string, string)>>(json, options);

			_urls = urls.OrderBy(x => Random.Shared.Next()).ToList();
			StateHasChanged();
		}

	}

	public class TupleConverter : JsonConverter<(string src, string url)>
	{
		public override (string src, string url) Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions
		options)
		{
			using (JsonDocument doc = JsonDocument.ParseValue(ref reader))
			{
				string src = doc.RootElement.GetProperty("src").GetString();
				string url = doc.RootElement.GetProperty("download").GetString();
				return (src, url);
			}
		}

		public override void Write(Utf8JsonWriter writer, (string src, string url) value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WriteString("src", value.src);
			writer.WriteString("download", value.url);
			writer.WriteEndObject();
		}
	}
}